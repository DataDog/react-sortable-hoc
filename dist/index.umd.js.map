{"version":3,"file":"index.umd.js","sources":["../src/utils.js","../src/DragLayer/utils.js","../src/DragLayer/index.js","../src/Manager.js","../src/SortableContainer/index.js","../src/SortableElement/index.js","../src/SortableHandle/index.js"],"sourcesContent":["import invariant from 'invariant';\n\nexport function arrayMove(array, from, to) {\n  // Will be deprecated soon. Consumers should install 'array-move' instead\n  // https://www.npmjs.com/package/array-move\n\n  array = array.slice();\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n\n  return array;\n}\n\nexport function omit(obj, ...keysToOmit) {\n  return Object.keys(obj).reduce((acc, key) => {\n    if (keysToOmit.indexOf(key) === -1) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nexport const events = {\n  start: ['touchstart', 'mousedown'],\n  move: ['touchmove', 'mousemove'],\n  end: ['touchend', 'touchcancel', 'mouseup'],\n};\n\nexport const vendorPrefix = (function() {\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    // Server environment\n    return '';\n  }\n\n  // fix for: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  // window.getComputedStyle() returns null inside an iframe with display: none\n  // in this case return an array with a fake mozilla style in it.\n  const styles = window.getComputedStyle(document.documentElement, '') || [\n    '-moz-hidden-iframe',\n  ];\n  const pre = (Array.prototype.slice\n    .call(styles)\n    .join('')\n    .match(/-(moz|webkit|ms)-/) ||\n    (styles.OLink === '' && ['', 'o']))[1];\n\n  switch (pre) {\n    case 'ms':\n      return 'ms';\n    default:\n      return pre && pre.length ? pre[0].toUpperCase() + pre.substr(1) : '';\n  }\n})();\n\nexport function closest(el, fn) {\n  while (el) {\n    if (fn(el)) {\n      return el;\n    }\n\n    el = el.parentNode;\n  }\n\n  return null;\n}\n\nexport function limit(min, max, value) {\n  return Math.max(min, Math.min(value, max));\n}\n\nfunction getPixelValue(stringValue) {\n  if (stringValue.substr(-2) === 'px') {\n    return parseFloat(stringValue);\n  }\n\n  return 0;\n}\n\nexport function getElementMargin(element) {\n  const style = window.getComputedStyle(element);\n\n  return {\n    top: getPixelValue(style.marginTop),\n    right: getPixelValue(style.marginRight),\n    bottom: getPixelValue(style.marginBottom),\n    left: getPixelValue(style.marginLeft),\n  };\n}\n\nexport function provideDisplayName(prefix, Component) {\n  const componentName = Component.displayName || Component.name;\n\n  return componentName ? `${prefix}(${componentName})` : prefix;\n}\n\nexport function getPosition(event) {\n  if (event.touches && event.touches.length) {\n    return {\n      x: event.touches[0].pageX,\n      y: event.touches[0].pageY,\n    };\n  } else if (event.changedTouches && event.changedTouches.length) {\n    return {\n      x: event.changedTouches[0].pageX,\n      y: event.changedTouches[0].pageY,\n    };\n  } else {\n    return {\n      x: event.pageX,\n      y: event.pageY,\n    };\n  }\n}\n\nexport function isTouchEvent(event) {\n  return (\n    (event.touches && event.touches.length) ||\n    (event.changedTouches && event.changedTouches.length)\n  );\n}\n\nexport function getEdgeOffset(node, parent, offset = {top: 0, left: 0}) {\n  if (!node) {\n    return undefined;\n  }\n\n  // Get the actual offsetTop / offsetLeft value, no matter how deep the node is nested\n  const nodeOffset = {\n    top: offset.top + node.offsetTop,\n    left: offset.left + node.offsetLeft,\n  };\n\n  if (node.parentNode === parent) {\n    return nodeOffset;\n  }\n\n  return getEdgeOffset(node.parentNode, parent, nodeOffset);\n}\n\nexport function getLockPixelOffset({lockOffset, width, height}) {\n  let offsetX = lockOffset;\n  let offsetY = lockOffset;\n  let unit = 'px';\n\n  if (typeof lockOffset === 'string') {\n    const match = /^[+-]?\\d*(?:\\.\\d*)?(px|%)$/.exec(lockOffset);\n\n    invariant(\n      match !== null,\n      'lockOffset value should be a number or a string of a ' +\n        'number followed by \"px\" or \"%\". Given %s',\n      lockOffset,\n    );\n\n    offsetX = parseFloat(lockOffset);\n    offsetY = parseFloat(lockOffset);\n    unit = match[1];\n  }\n\n  invariant(\n    isFinite(offsetX) && isFinite(offsetY),\n    'lockOffset value should be a finite. Given %s',\n    lockOffset,\n  );\n\n  if (unit === '%') {\n    offsetX = (offsetX * width) / 100;\n    offsetY = (offsetY * height) / 100;\n  }\n\n  return {\n    x: offsetX,\n    y: offsetY,\n  };\n}\n\nexport const NodeType = {\n  Anchor: 'A',\n  Button: 'BUTTON',\n  Canvas: 'CANVAS',\n  Input: 'INPUT',\n  Option: 'OPTION',\n  Textarea: 'TEXTAREA',\n  Select: 'SELECT',\n};\n","import {limit} from '../utils';\n\nexport function distanceRect(x, y, rect) {\n  // Take account of scroll\n  const pageXOffset = window.pageXOffset;\n  const pageYOffset = window.pageYOffset;\n\n  const left = rect.left + pageXOffset;\n  const right = rect.right + pageXOffset;\n  const top = rect.top + pageYOffset;\n  const bottom = rect.bottom + pageYOffset;\n  const dx = x - limit(left, right, x);\n  const dy = y - limit(top, bottom, y);\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function closestRect(x, y, containers) {\n  const distances = containers.map((container) =>\n    distanceRect(x, y, container.getBoundingClientRect()));\n  return distances.indexOf(Math.min(...distances));\n}\n\nexport function getDelta(rect1, rect2) {\n  return {\n    x: rect1.left - rect2.left,\n    y: rect1.top - rect2.top,\n  };\n}\n\nexport function updateDistanceBetweenContainers(\n  distance,\n  container1,\n  container2,\n) {\n  const {x, y} = distance;\n  const delta = getDelta(\n    ...[container1, container2].map((cont) => cont.container.getBoundingClientRect()),\n  );\n  const scrollDX = container2.scrollContainer.scrollLeft - container1.scrollContainer.scrollLeft;\n  const scrollDY = container2.scrollContainer.scrollTop - container1.scrollContainer.scrollTop;\n  return {\n    x: x + delta.x + scrollDX,\n    y: y + delta.y + scrollDY,\n  };\n}\n","import {\n  events,\n  vendorPrefix,\n  getPosition,\n  getElementMargin,\n  getEdgeOffset,\n  limit,\n  NodeType,\n} from '../utils';\nimport {closestRect, updateDistanceBetweenContainers} from './utils';\n\nexport default class DragLayer {\n  helper = null;\n  lists = [];\n\n  handleSortMove = (event) => {\n    // Prevent scrolling on mobile\n    event.preventDefault();\n    this.updatePosition(event);\n    this.updateTargetContainer(event);\n    if (this.targetList) {\n      this.targetList.handleSortMove(event);\n    }\n  };\n\n  handleSortEnd = (event) => {\n    if (this.listenerNode) {\n      events.move.forEach((eventName) =>\n        this.listenerNode.removeEventListener(eventName, this.handleSortMove));\n      events.end.forEach((eventName) =>\n        this.listenerNode.removeEventListener(eventName, this.handleSortEnd));\n    }\n\n    if (typeof this.onDragEnd === 'function') {\n      this.onDragEnd();\n    }\n    // Remove the helper from the DOM\n    if (this.helper) {\n      this.helper.parentNode.removeChild(this.helper);\n      this.helper = null;\n      this.targetList.handleSortEnd(event);\n    }\n\n    // Reset window scroll & container height diff\n    this.lists.forEach((list) => {\n      delete list.initialWindowScroll;\n    });\n  };\n\n  addRef(list) {\n    this.lists.push(list);\n  }\n\n  removeRef(list) {\n    const i = this.lists.indexOf(list);\n    if (i !== -1) {\n      this.lists.splice(i, 1);\n    }\n  }\n\n  setTranslateBoundaries(containerBoundingRect, list) {\n    const {useWindowAsScrollContainer} = list.props;\n\n    this.minTranslate = {};\n    this.maxTranslate = {};\n    if (this.axis.x) {\n      this.minTranslate.x = (useWindowAsScrollContainer\n        ? 0\n        : containerBoundingRect.left) -\n        this.boundingClientRect.left -\n        this.width / 2;\n      this.maxTranslate.x = (useWindowAsScrollContainer\n        ? list.contentWindow.innerWidth\n        : containerBoundingRect.left + containerBoundingRect.width) -\n        this.boundingClientRect.left -\n        this.width / 2;\n    }\n    if (this.axis.y) {\n      this.minTranslate.y = (useWindowAsScrollContainer\n        ? 0\n        : containerBoundingRect.top) -\n        this.boundingClientRect.top -\n        this.height / 2;\n      this.maxTranslate.y = (useWindowAsScrollContainer\n        ? list.contentWindow.innerHeight\n        : containerBoundingRect.top + containerBoundingRect.height) -\n        this.boundingClientRect.top -\n        this.height / 2;\n    }\n  }\n\n  startDrag(parent, list, event) {\n    const position = getPosition(event);\n    const activeNode = list.manager.getActive();\n\n    if (activeNode) {\n      const {\n        axis,\n        getHelperDimensions,\n      } = list.props;\n      const {node, collection} = activeNode;\n      const {index} = node.sortableInfo;\n      const margin = getElementMargin(node);\n      const containerBoundingRect = list.container.getBoundingClientRect();\n      const dimensions = getHelperDimensions({index, node, collection});\n\n      this.width = dimensions.width;\n      this.height = dimensions.height;\n      this.marginOffset = {\n        x: margin.left + margin.right,\n        y: Math.max(margin.top, margin.bottom),\n      };\n      this.boundingClientRect = node.getBoundingClientRect();\n      this.containerBoundingRect = containerBoundingRect;\n      this.targetList = list;\n\n      this.axis = {\n        x: axis.indexOf('x') >= 0,\n        y: axis.indexOf('y') >= 0,\n      };\n      this.offsetEdge = getEdgeOffset(node, list.container);\n\n      this.initialOffset = position;\n      this.distanceBetweenContainers = {\n        x: 0,\n        y: 0,\n      };\n\n      const fields = node.querySelectorAll('input, textarea, select, canvas');\n      const clonedNode = node.cloneNode(true);\n      const clonedFields = [\n        ...clonedNode.querySelectorAll('input, textarea, select, canvas'),\n      ];\n\n      clonedFields.forEach((field, i) => {\n        if (field.type !== 'file' && fields[index]) {\n          field.value = fields[i].value;\n        }\n\n        if (field.tagName === NodeType.Canvas) {\n          const destCtx = field.getContext('2d');\n          destCtx.drawImage(fields[index], 0, 0);\n        }\n      });\n\n      this.helper = parent.appendChild(clonedNode);\n\n      this.helper.style.position = 'fixed';\n      this.helper.style.top = `${this.boundingClientRect.top - margin.top}px`;\n      this.helper.style.left = `${this.boundingClientRect.left -\n        margin.left}px`;\n      this.helper.style.width = `${this.width}px`;\n      this.helper.style.height = `${this.height}px`;\n      this.helper.style.boxSizing = 'border-box';\n      this.helper.style.pointerEvents = 'none';\n\n      this.setTranslateBoundaries(containerBoundingRect, list);\n\n      this.listenerNode = event.touches ? node : list.contentWindow;\n      events.move.forEach((eventName) =>\n        this.listenerNode.addEventListener(\n          eventName,\n          this.handleSortMove,\n          false,\n        ));\n      events.end.forEach((eventName) =>\n        this.listenerNode.addEventListener(\n          eventName,\n          this.handleSortEnd,\n          false,\n        ));\n\n      return activeNode;\n    }\n    return false;\n  }\n\n  stopDrag() {\n    this.handleSortEnd();\n  }\n\n  updatePosition(event) {\n    const {lockAxis, lockToContainerEdges} = this.targetList.props;\n    const offset = getPosition(event);\n    const translate = {\n      x: offset.x - this.initialOffset.x,\n      y: offset.y - this.initialOffset.y,\n    };\n    // Adjust for window scroll\n    translate.y -= (window.pageYOffset - this.targetList.initialWindowScroll.top);\n    translate.x -= (window.pageXOffset - this.targetList.initialWindowScroll.left);\n\n    this.translate = translate;\n    this.delta = offset;\n\n    if (lockToContainerEdges) {\n      const [\n        minLockOffset,\n        maxLockOffset,\n      ] = this.targetList.getLockPixelOffsets();\n      const minOffset = {\n        x: this.width / 2 - minLockOffset.x,\n        y: this.height / 2 - minLockOffset.y,\n      };\n      const maxOffset = {\n        x: this.width / 2 - maxLockOffset.x,\n        y: this.height / 2 - maxLockOffset.y,\n      };\n\n      translate.x = limit(\n        this.minTranslate.x + minOffset.x,\n        this.maxTranslate.x - maxOffset.x,\n          translate.x,\n      );\n      translate.y = limit(\n        this.minTranslate.y + minOffset.y,\n        this.maxTranslate.y - maxOffset.y,\n          translate.y,\n      );\n    }\n\n    if (lockAxis === 'x') {\n      translate.y = 0;\n    } else if (lockAxis === 'y') {\n      translate.x = 0;\n    }\n\n    this.helper.style[\n      `${vendorPrefix}Transform`\n    ] = `translate3d(${translate.x}px,${translate.y}px, 0)`;\n  }\n\n  updateTargetContainer(event) {\n    const {x, y} = this.delta;\n    const originList = this.targetList;\n    const targetList = this.lists[\n      closestRect(x, y, this.lists.map((list) => list.container))\n    ];\n    const {item} = this.targetList.manager.active;\n    this.active = item;\n    if (targetList !== originList) {\n      this.targetList = targetList;\n\n      // Store initial scroll and dimensions of origin list, and initial\n      // dimensions of target list. This is to later accommodate height changes\n      // in both lists when items are added or removed during the DND operation.\n      const originListInitialWindowScroll = originList.initialWindowScroll;\n      const cachedOriginListRect = originList.container.getBoundingClientRect();\n      const cachedTargetListRect = targetList.container.getBoundingClientRect();\n\n      originList.handleSortEnd(event, targetList);\n\n      this.setTranslateBoundaries(\n        targetList.container.getBoundingClientRect(),\n        targetList,\n      );\n      this.targetList.manager.active = {\n        ...targetList.getClosestNode(event),\n        item,\n      };\n      targetList.handlePress(event);\n\n      // Override initial scroll to use scroll of origin list\n      this.targetList.initialWindowScroll = originListInitialWindowScroll;\n\n      this.distanceBetweenContainers = updateDistanceBetweenContainers(\n        this.distanceBetweenContainers,\n        targetList,\n        originList,\n      );\n\n      const targetListRect = targetList.container.getBoundingClientRect();\n\n      // If we're moving up the container ...\n      if (targetListRect.top < cachedOriginListRect.top) {\n        // Calculate any height difference that has occurred on the target container during the DND\n        const targetListContainerHeightDelta = Math.abs(cachedTargetListRect.height - targetListRect.height);\n        this.distanceBetweenContainers.y += targetListContainerHeightDelta;\n      }\n    }\n  }\n}\n","export default class Manager {\n  refs = {};\n\n  add(collection, ref) {\n    if (!this.refs[collection]) {\n      this.refs[collection] = [];\n    }\n\n    this.refs[collection].push(ref);\n  }\n\n  remove(collection, ref) {\n    const index = this.getIndex(collection, ref);\n\n    if (index !== -1) {\n      this.refs[collection].splice(index, 1);\n    }\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  getActive() {\n    if (!this.active) {\n      return null;\n    }\n    const activeRef = this.refs[this.active.collection];\n    if (!activeRef) {\n      return null;\n    }\n    return (\n      activeRef.find(\n        // eslint-disable-next-line eqeqeq\n        ({node}) => node.sortableInfo.index == this.active.index,\n      ) || activeRef.slice(-1).pop()\n    );\n  }\n\n  getIndex(collection, ref) {\n    return this.refs[collection].indexOf(ref);\n  }\n\n  getOrderedRefs(collection = this.active.collection) {\n    return this.refs[collection].sort(sortByIndex);\n  }\n}\n\nfunction sortByIndex(\n  {\n    node: {\n      sortableInfo: {index: index1},\n    },\n  },\n  {\n    node: {\n      sortableInfo: {index: index2},\n    },\n  },\n) {\n  return index1 - index2;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {findDOMNode} from 'react-dom';\nimport invariant from 'invariant';\nimport findIndex from 'lodash/findIndex';\nimport isPlainObject from 'lodash/isPlainObject';\nimport DragLayer from '../DragLayer';\nimport Manager from '../Manager';\nimport {\n  closest,\n  events,\n  vendorPrefix,\n  getEdgeOffset,\n  getLockPixelOffset,\n  getPosition,\n  isTouchEvent,\n  provideDisplayName,\n  omit,\n} from '../utils';\nimport {closestRect} from '../DragLayer/utils';\nimport 'classlist-polyfill';\n\nexport default function sortableContainer(\n  WrappedComponent,\n  config = {withRef: false},\n) {\n  return class WithSortableContainer extends React.Component {\n    constructor(props) {\n      super(props);\n      this.dragLayer = props.dragLayer || new DragLayer();\n      this.dragLayer.addRef(this);\n      this.dragLayer.onDragEnd = props.onDragEnd;\n      this.manager = new Manager();\n      this.events = {\n        start: this.handleStart,\n        move: this.handleMove,\n        end: this.handleEnd,\n      };\n\n      invariant(\n        !(props.distance && props.pressDelay),\n        'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.',\n      );\n\n      this.state = {};\n      this.sorting = false;\n    }\n\n    static displayName = provideDisplayName('sortableList', WrappedComponent);\n\n    static defaultProps = {\n      axis: 'y',\n      transitionDuration: 300,\n      pressDelay: 0,\n      pressThreshold: 5,\n      distance: 0,\n      useWindowAsScrollContainer: false,\n      hideSortableGhost: true,\n      animateNodes: true,\n      shouldCancelStart(event) {\n        // Cancel sorting if the event target is an `input`, `textarea`, `select` or `option`\n        const disabledElements = [\n          'input',\n          'textarea',\n          'select',\n          'option',\n          'button',\n        ];\n\n        if (\n          disabledElements.indexOf(event.target.tagName.toLowerCase()) !== -1\n        ) {\n          // Return true to cancel sorting\n          return true;\n        }\n\n        return false;\n      },\n      lockToContainerEdges: false,\n      lockOffset: '50%',\n      getHelperDimensions: ({node}) => ({\n        width: node.offsetWidth,\n        height: node.offsetHeight,\n      }),\n    };\n\n    static propTypes = {\n      axis: PropTypes.oneOf(['x', 'y', 'xy']),\n      distance: PropTypes.number,\n      dragLayer: PropTypes.object,\n      lockAxis: PropTypes.string,\n      helperClass: PropTypes.string,\n      transitionDuration: PropTypes.number,\n      contentWindow: PropTypes.any,\n      onSortStart: PropTypes.func,\n      onSortMove: PropTypes.func,\n      onSortOver: PropTypes.func,\n      onSortEnd: PropTypes.func,\n      onDragEnd: PropTypes.func,\n      shouldCancelStart: PropTypes.func,\n      pressDelay: PropTypes.number,\n      pressThreshold: PropTypes.number,\n      useDragHandle: PropTypes.bool,\n      animateNodes: PropTypes.bool,\n      useWindowAsScrollContainer: PropTypes.bool,\n      hideSortableGhost: PropTypes.bool,\n      lockToContainerEdges: PropTypes.bool,\n      lockOffset: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        ),\n      ]),\n      getContainer: PropTypes.func,\n      getHelperDimensions: PropTypes.func,\n    };\n\n    static childContextTypes = {\n      manager: PropTypes.object.isRequired,\n    };\n\n    getChildContext() {\n      return {\n        manager: this.manager,\n      };\n    }\n\n    componentDidMount() {\n      const {useWindowAsScrollContainer} = this.props;\n\n      /*\n       *  Set our own default rather than using defaultProps because Jest\n       *  snapshots will serialize window, causing a RangeError\n       *  https://github.com/clauderic/react-sortable-hoc/issues/249\n       */\n\n      const container = this.getContainer();\n\n      Promise.resolve(container).then((containerNode) => {\n        this.container = containerNode;\n        this.document = this.container.ownerDocument || document;\n\n        const contentWindow =\n          this.props.contentWindow || this.document.defaultView || window;\n\n        this.contentWindow =\n          typeof contentWindow === 'function' ? contentWindow() : contentWindow;\n        this.scrollContainer = useWindowAsScrollContainer\n          ? this.document.scrollingElement || this.document.documentElement\n          : this.container;\n        this.initialScroll = {\n          top: this.scrollContainer.scrollTop,\n          left: this.scrollContainer.scrollLeft,\n        };\n\n        for (const key in this.events) {\n          if (this.events.hasOwnProperty(key)) {\n            events[key].forEach((eventName) =>\n              this.container.addEventListener(\n                eventName,\n                this.events[key],\n                false,\n              ),\n            );\n          }\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.dragLayer.removeRef(this);\n      if (this.container) {\n        for (const key in this.events) {\n          if (this.events.hasOwnProperty(key)) {\n            events[key].forEach((eventName) =>\n              this.container.removeEventListener(eventName, this.events[key]),\n            );\n          }\n        }\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const {active} = this.manager;\n      if (!active) {\n        return;\n      }\n      this.checkActiveIndex(nextProps);\n    }\n\n    checkActiveIndex = (nextProps) => {\n      const {items} = nextProps || this.props;\n      const {item} = this.manager.active;\n\n      // If sortable item is an object, find item that match id\n      // Otherwise let findIndex predicate on item\n      const newIndex = isPlainObject(item)\n        ? findIndex(items, (obj) => obj.id === item.id)\n        : findIndex(items, item);\n\n      if (newIndex === -1) {\n        this.dragLayer.stopDrag();\n        return;\n      }\n      this.manager.active.index = newIndex;\n      this.index = newIndex;\n    };\n\n    handleStart = (event) => {\n      const {distance, shouldCancelStart, items} = this.props;\n\n      if (event.button === 2 || shouldCancelStart(event)) {\n        return;\n      }\n\n      this._touched = true;\n      this._pos = getPosition(event);\n\n      const node = closest(event.target, (el) => el.sortableInfo != null);\n\n      if (\n        node &&\n        node.sortableInfo &&\n        this.nodeIsChild(node) &&\n        !this.sorting\n      ) {\n        const {useDragHandle} = this.props;\n        const {index, collection} = node.sortableInfo;\n\n        if (\n          useDragHandle &&\n          !closest(event.target, (el) => el.sortableHandle != null)\n        ) {\n          return;\n        }\n\n        this.manager.active = {index, collection, item: items[index]};\n\n        /*\n         * Fixes a bug in Firefox where the :active state of anchor tags\n         * prevent subsequent 'mousemove' events from being fired\n         * (see https://github.com/clauderic/react-sortable-hoc/issues/118)\n         */\n        if (\n          !isTouchEvent(event) &&\n          event.target.tagName.toLowerCase() === 'a'\n        ) {\n          event.preventDefault();\n        }\n\n        if (!distance) {\n          if (this.props.pressDelay === 0) {\n            this.handlePress(event);\n          } else {\n            this.pressTimer = setTimeout(\n              () => this.handlePress(event),\n              this.props.pressDelay,\n            );\n          }\n        }\n      }\n    };\n\n    nodeIsChild = (node) => {\n      return node.sortableInfo.manager === this.manager;\n    };\n\n    handleMove = (event) => {\n      const {distance, pressThreshold} = this.props;\n      if (!this.sorting && this._touched) {\n        const position = getPosition(event);\n        const delta = {\n          x: this._pos.x - position.x,\n          y: this._pos.y - position.y,\n        };\n        const combinedDelta = Math.abs(delta.x) + Math.abs(delta.y);\n\n        this.delta = delta;\n\n        if (\n          !distance &&\n          (!pressThreshold ||\n            (pressThreshold && combinedDelta >= pressThreshold))\n        ) {\n          clearTimeout(this.cancelTimer);\n          this.cancelTimer = setTimeout(this.cancel, 0);\n        } else if (\n          distance &&\n          combinedDelta >= distance &&\n          this.manager.isActive()\n        ) {\n          this.handlePress(event);\n        }\n      }\n    };\n\n    handleEnd = () => {\n      this._touched = false;\n      this.cancel();\n    };\n\n    cancel = () => {\n      const {distance} = this.props;\n\n      if (!this.sorting) {\n        if (!distance) {\n          clearTimeout(this.pressTimer);\n        }\n        this.manager.active = null;\n      }\n    };\n\n    handlePress = (event) => {\n      let active = null;\n      if (this.dragLayer.helper) {\n        if (this.manager.active) {\n          this.checkActiveIndex();\n          active = this.manager.getActive();\n        }\n      } else {\n        active = this.dragLayer.startDrag(this.document.body, this, event);\n      }\n\n      if (active) {\n        const {axis, helperClass, hideSortableGhost, onSortStart} = this.props;\n        const {node, collection} = active;\n        const {index} = node.sortableInfo;\n\n        this.index = index;\n        this.newIndex = index;\n        this.axis = {\n          x: axis.indexOf('x') >= 0,\n          y: axis.indexOf('y') >= 0,\n        };\n\n        this.initialScroll = {\n          top: this.container.scrollTop,\n          left: this.container.scrollLeft,\n        };\n\n        this.initialWindowScroll = {\n          top: window.pageYOffset,\n          left: window.pageXOffset,\n        };\n\n        if (hideSortableGhost) {\n          this.sortableGhost = node;\n          node.style.visibility = 'hidden';\n          node.style.opacity = 0;\n        }\n\n        if (helperClass) {\n          this.dragLayer.helper.classList.add(...helperClass.split(' '));\n        }\n\n        this.sorting = true;\n        this.sortingIndex = index;\n\n        if (onSortStart) {\n          onSortStart({node, index, collection}, event);\n        }\n      }\n    };\n\n    _handleSortMove = (event) => {\n      // animate nodes if required\n      if (this.checkActive(event)) {\n        this.animateNodes();\n        this.autoscroll();\n      }\n\n      if (window.requestAnimationFrame) {\n        this.sortMoveAF = null;\n      } else {\n        // aim for 60 fps\n        setTimeout(() => {\n          this.sortMoveAF = null;\n        }, 1000 / 60);\n      }\n    };\n\n    handleSortMove = (event) => {\n      const {onSortMove} = this.props;\n      // Prevent scrolling on mobile\n      event.preventDefault();\n\n      if (this.sortMoveAF) {\n        return;\n      }\n\n      if (window.requestAnimationFrame) {\n        this.sortMoveAF = window.requestAnimationFrame(this._handleSortMove);\n      } else {\n        this.sortMoveAF = true;\n        // call inner function now if no animation frame\n        this._handleSortMove();\n      }\n\n      if (onSortMove) {\n        onSortMove(event);\n      }\n    };\n\n    handleSortEnd = (event, newList = null) => {\n      const {hideSortableGhost, onSortEnd} = this.props;\n      if (!this.manager.active) {\n        return;\n      }\n      const {collection} = this.manager.active;\n\n      // Remove the move handler if there's a frame that hasn't run yet.\n      if (window.cancelAnimationFrame && this.sortMoveAF) {\n        window.cancelAnimationFrame(this.sortMoveAF);\n        this.sortMoveAF = null;\n      }\n\n      if (hideSortableGhost && this.sortableGhost) {\n        this.sortableGhost.style.visibility = '';\n        this.sortableGhost.style.opacity = '';\n      }\n\n      const nodes = this.manager.refs[collection];\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n        const el = node.node;\n\n        // Clear the cached offsetTop / offsetLeft value\n        node.edgeOffset = null;\n\n        // Remove the transforms / transitions\n        el.style[`${vendorPrefix}Transform`] = '';\n        el.style[`${vendorPrefix}TransitionDuration`] = '';\n      }\n\n      // Stop autoscroll\n      clearInterval(this.autoscrollInterval);\n      this.autoscrollInterval = null;\n\n      // Update state\n      this.manager.active = null;\n\n      this.sorting = false;\n      this.sortingIndex = null;\n\n      if (typeof onSortEnd === 'function') {\n        // get the index in the new list\n        if (newList) {\n          this.newIndex = newList.getClosestNode(event).index;\n        }\n\n        onSortEnd(\n          {\n            oldIndex: this.index,\n            newIndex: this.newIndex,\n            newList,\n            collection,\n          },\n          event,\n        );\n      }\n\n      this._touched = false;\n    };\n\n    handleSortSwap = (index, item) => {\n      const {onSortSwap} = this.props;\n      if (typeof onSortSwap === 'function') {\n        onSortSwap({\n          index,\n          item,\n        });\n      }\n    };\n\n    getLockPixelOffsets() {\n      const {width, height} = this.dragLayer;\n      const {lockOffset} = this.props;\n      const offsets = Array.isArray(lockOffset)\n        ? lockOffset\n        : [lockOffset, lockOffset];\n\n      invariant(\n        offsets.length === 2,\n        'lockOffset prop of SortableContainer should be a single ' +\n          'value or an array of exactly two values. Given %s',\n        lockOffset,\n      );\n\n      const [minLockOffset, maxLockOffset] = offsets;\n\n      return [\n        getLockPixelOffset({lockOffset: minLockOffset, width, height}),\n        getLockPixelOffset({lockOffset: maxLockOffset, width, height}),\n      ];\n    }\n\n    getClosestNode = (event) => {\n      const position = getPosition(event);\n      // eslint-disable-next-line\n      let closestNodes = [];\n      // eslint-disable-next-line\n      let closestCollections = [];\n\n      Object.keys(this.manager.refs).forEach((collection) => {\n        const nodes = this.manager.refs[collection].map((ref) => ref.node);\n        if (nodes && nodes.length > 0) {\n          closestNodes.push(nodes[closestRect(position.x, position.y, nodes)]);\n          closestCollections.push(collection);\n        }\n      });\n      const index = closestRect(position.x, position.y, closestNodes);\n      const collection = closestCollections[index];\n      if (collection === undefined) {\n        return {\n          collection,\n          index: 0,\n        };\n      }\n      const finalNodes = this.manager.refs[collection].map((ref) => ref.node);\n      const finalIndex = finalNodes.indexOf(closestNodes[index]);\n      const node = closestNodes[index];\n      const rect = node.getBoundingClientRect();\n      return {\n        collection,\n        index: finalIndex + (position.y > rect.bottom ? 1 : 0),\n      };\n    };\n\n    checkActive = (event) => {\n      const active = this.manager.active;\n      if (!active) {\n        // find closest collection\n        const node = closest(event.target, (el) => el.sortableInfo != null);\n        if (node && node.sortableInfo) {\n          const pos = getPosition(event);\n          const {collection} = node.sortableInfo;\n          const nodes = this.manager.refs[collection].map((ref) => ref.node);\n          // find closest index in collection\n          if (nodes) {\n            const index = closestRect(pos.x, pos.y, nodes);\n            this.manager.active = {\n              index,\n              collection,\n              item: this.props.items[index],\n            };\n            this.handlePress(event);\n          }\n        }\n        return false;\n      }\n      return true;\n    };\n\n    animateNodes() {\n      if (!this.axis) {\n        return;\n      }\n      const {\n        transitionDuration,\n        hideSortableGhost,\n        onSortOver,\n        animateNodes,\n      } = this.props;\n      const nodes = this.manager.getOrderedRefs();\n      const containerScrollDelta = {\n        left: this.container.scrollLeft - this.initialScroll.left,\n        top: this.container.scrollTop - this.initialScroll.top,\n      };\n      const sortingOffset = {\n        left:\n          this.dragLayer.offsetEdge.left -\n          this.dragLayer.distanceBetweenContainers.x +\n          this.dragLayer.translate.x +\n          containerScrollDelta.left,\n        top:\n          this.dragLayer.offsetEdge.top -\n          this.dragLayer.distanceBetweenContainers.y +\n          this.dragLayer.translate.y +\n          containerScrollDelta.top,\n      };\n      const windowScrollDelta = {\n        top: window.pageYOffset - this.initialWindowScroll.top,\n        left: window.pageXOffset - this.initialWindowScroll.left,\n      };\n      const prevIndex = this.newIndex;\n      this.newIndex = null;\n\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const {node} = nodes[i];\n        const index = node.sortableInfo.index;\n        const width = node.offsetWidth;\n        const height = node.offsetHeight;\n        const offset = {\n          width:\n            this.dragLayer.width > width ? width / 2 : this.dragLayer.width / 2,\n          height:\n            this.dragLayer.height > height\n              ? height / 2\n              : this.dragLayer.height / 2,\n        };\n\n        const translate = {\n          x: 0,\n          y: 0,\n        };\n        let {edgeOffset} = nodes[i];\n\n        // If we haven't cached the node's offsetTop / offsetLeft value\n        if (!edgeOffset) {\n          edgeOffset = getEdgeOffset(node, this.container);\n          nodes[i].edgeOffset = edgeOffset;\n        }\n\n        // Get a reference to the next and previous node\n        const nextNode = i < nodes.length - 1 && nodes[i + 1];\n        const prevNode = i > 0 && nodes[i - 1];\n\n        // Also cache the next node's edge offset if needed.\n        // We need this for calculating the animation in a grid setup\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, this.container);\n        }\n\n        // If the node is the one we're currently animating, skip it\n        if (index === this.index) {\n          if (hideSortableGhost) {\n            /*\n             * With windowing libraries such as `react-virtualized`, the sortableGhost\n             * node may change while scrolling down and then back up (or vice-versa),\n             * so we need to update the reference to the new node just to be safe.\n             */\n            this.sortableGhost = node;\n            node.style.visibility = 'hidden';\n            node.style.opacity = 0;\n          }\n          continue;\n        }\n\n        if (transitionDuration) {\n          node.style[\n            `${vendorPrefix}TransitionDuration`\n          ] = `${transitionDuration}ms`;\n        }\n\n        if (this.axis.x) {\n          if (this.axis.y) {\n            // Calculations for a grid setup\n            if (\n              index < this.index &&\n              ((sortingOffset.left + windowScrollDelta.left - offset.width <=\n                edgeOffset.left &&\n                sortingOffset.top + windowScrollDelta.top <=\n                  edgeOffset.top + offset.height) ||\n                sortingOffset.top + windowScrollDelta.top + offset.height <=\n                  edgeOffset.top)\n            ) {\n              // If the current node is to the left on the same row, or above the node that's being dragged\n              // then move it to the right\n              translate.x =\n                this.dragLayer.width + this.dragLayer.marginOffset.x;\n              if (\n                edgeOffset.left + translate.x >\n                this.dragLayer.containerBoundingRect.width - offset.width\n              ) {\n                // If it moves passed the right bounds, then animate it to the first position of the next row.\n                // We just use the offset of the next node to calculate where to move, because that node's original position\n                // is exactly where we want to go\n                translate.x = nextNode.edgeOffset.left - edgeOffset.left;\n                translate.y = nextNode.edgeOffset.top - edgeOffset.top;\n              }\n              if (this.newIndex === null) {\n                this.newIndex = index;\n              }\n            } else if (\n              index > this.index &&\n              ((sortingOffset.left + windowScrollDelta.left + offset.width >=\n                edgeOffset.left &&\n                sortingOffset.top + windowScrollDelta.top + offset.height >=\n                  edgeOffset.top) ||\n                sortingOffset.top + windowScrollDelta.top + offset.height >=\n                  edgeOffset.top + height)\n            ) {\n              // If the current node is to the right on the same row, or below the node that's being dragged\n              // then move it to the left\n              translate.x = -(\n                this.dragLayer.width + this.dragLayer.marginOffset.x\n              );\n              if (\n                edgeOffset.left + translate.x <\n                this.dragLayer.containerBoundingRect.left + offset.width\n              ) {\n                // If it moves passed the left bounds, then animate it to the last position of the previous row.\n                // We just use the offset of the previous node to calculate where to move, because that node's original position\n                // is exactly where we want to go\n                translate.x = prevNode.edgeOffset.left - edgeOffset.left;\n                translate.y = prevNode.edgeOffset.top - edgeOffset.top;\n              }\n              this.newIndex = index;\n            }\n          } else {\n            if (\n              index > this.index &&\n              sortingOffset.left + windowScrollDelta.left + offset.width >=\n                edgeOffset.left\n            ) {\n              translate.x = -(\n                this.dragLayer.width + this.dragLayer.marginOffset.x\n              );\n              this.newIndex = index;\n            } else if (\n              index < this.index &&\n              sortingOffset.left + windowScrollDelta.left <=\n                edgeOffset.left + offset.width\n            ) {\n              translate.x =\n                this.dragLayer.width + this.dragLayer.marginOffset.x;\n\n              if (this.newIndex == null) {\n                this.newIndex = index;\n              }\n            }\n          }\n        } else if (this.axis.y) {\n          if (\n            index > this.index &&\n            sortingOffset.top + windowScrollDelta.top + offset.height >=\n              edgeOffset.top\n          ) {\n            translate.y = -(\n              this.dragLayer.height + this.dragLayer.marginOffset.y\n            );\n            this.newIndex = index;\n          } else if (\n            index < this.index &&\n            sortingOffset.top + windowScrollDelta.top <=\n              edgeOffset.top + offset.height\n          ) {\n            translate.y = this.dragLayer.height + this.dragLayer.marginOffset.y;\n            if (this.newIndex == null) {\n              this.newIndex = index;\n            }\n          }\n        }\n\n        // Translate the position of the given node\n        if (animateNodes) {\n          node.style[`${vendorPrefix}Transform`] = `translate3d(${\n            translate.x\n          }px,${translate.y}px,0)`;\n        }\n      }\n\n      if (this.newIndex == null) {\n        this.newIndex = this.index;\n      }\n\n      if (onSortOver && this.newIndex !== prevIndex) {\n        onSortOver({\n          newIndex: this.newIndex,\n          oldIndex: prevIndex,\n          index: this.index,\n          collection: this.manager.active.collection,\n        });\n      }\n    }\n\n    autoscroll = () => {\n      const translate = this.dragLayer.translate;\n      const direction = {\n        x: 0,\n        y: 0,\n      };\n      const speed = {\n        x: 1,\n        y: 1,\n      };\n      const acceleration = {\n        x: 10,\n        y: 10,\n      };\n\n      if (\n        translate.y >=\n        this.dragLayer.maxTranslate.y - this.dragLayer.height / 2\n      ) {\n        // Scroll Down\n        direction.y = 1;\n        speed.y =\n          acceleration.y *\n          Math.abs(\n            (this.dragLayer.maxTranslate.y -\n              this.dragLayer.height / 2 -\n              translate.y) /\n              this.dragLayer.height,\n          );\n      } else if (\n        translate.x >=\n        this.dragLayer.maxTranslate.x - this.dragLayer.width / 2\n      ) {\n        // Scroll Right\n        direction.x = 1;\n        speed.x =\n          acceleration.x *\n          Math.abs(\n            (this.dragLayer.maxTranslate.x -\n              this.dragLayer.width / 2 -\n              translate.x) /\n              this.dragLayer.width,\n          );\n      } else if (\n        translate.y <=\n        this.dragLayer.minTranslate.y + this.dragLayer.height / 2\n      ) {\n        // Scroll Up\n        direction.y = -1;\n        speed.y =\n          acceleration.y *\n          Math.abs(\n            (translate.y -\n              this.dragLayer.height / 2 -\n              this.dragLayer.minTranslate.y) /\n              this.dragLayer.height,\n          );\n      } else if (\n        translate.x <=\n        this.dragLayer.minTranslate.x + this.dragLayer.width / 2\n      ) {\n        // Scroll Left\n        direction.x = -1;\n        speed.x =\n          acceleration.x *\n          Math.abs(\n            (translate.x -\n              this.dragLayer.width / 2 -\n              this.dragLayer.minTranslate.x) /\n              this.dragLayer.width,\n          );\n      }\n\n      if (this.autoscrollInterval) {\n        clearInterval(this.autoscrollInterval);\n        this.autoscrollInterval = null;\n        this.isAutoScrolling = false;\n      }\n\n      if (direction.x !== 0 || direction.y !== 0) {\n        this.autoscrollInterval = setInterval(() => {\n          this.isAutoScrolling = true;\n          const offset = {\n            left: speed.x * direction.x,\n            top: speed.y * direction.y,\n          };\n          this.scrollContainer.scrollTop += offset.top;\n          this.scrollContainer.scrollLeft += offset.left;\n          this.animateNodes();\n        }, 5);\n      }\n    };\n\n    getWrappedInstance() {\n      invariant(\n        config.withRef,\n        'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call',\n      );\n\n      return this.refs.wrappedInstance;\n    }\n\n    getContainer() {\n      const {getContainer} = this.props;\n\n      if (typeof getContainer !== 'function') {\n        return findDOMNode(this);\n      }\n\n      return getContainer(\n        config.withRef ? this.getWrappedInstance() : undefined,\n      );\n    }\n\n    render() {\n      const ref = config.withRef ? 'wrappedInstance' : null;\n\n      return (\n        <WrappedComponent\n          ref={ref}\n          {...omit(\n            this.props,\n            'contentWindow',\n            'useWindowAsScrollContainer',\n            'distance',\n            'helperClass',\n            'hideSortableGhost',\n            'transitionDuration',\n            'useDragHandle',\n            'animateNodes',\n            'pressDelay',\n            'pressThreshold',\n            'shouldCancelStart',\n            'onSortStart',\n            'onSortSwap',\n            'onSortMove',\n            'onSortEnd',\n            'axis',\n            'lockAxis',\n            'lockOffset',\n            'lockToContainerEdges',\n            'getContainer',\n            'getHelperDimensions',\n          )}\n        />\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {findDOMNode} from 'react-dom';\nimport invariant from 'invariant';\n\nimport {provideDisplayName, omit} from '../utils';\n\nexport default function sortableElement(\n  WrappedComponent,\n  config = {withRef: false},\n) {\n  return class WithSortableElement extends React.Component {\n    static displayName = provideDisplayName(\n      'sortableElement',\n      WrappedComponent,\n    );\n\n    static contextTypes = {\n      manager: PropTypes.object.isRequired,\n    };\n\n    static propTypes = {\n      index: PropTypes.number.isRequired,\n      collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      disabled: PropTypes.bool,\n    };\n\n    static defaultProps = {\n      collection: 0,\n    };\n\n    componentDidMount() {\n      const {collection, disabled, index} = this.props;\n\n      if (!disabled) {\n        this.setDraggable(collection, index);\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.props.index !== nextProps.index && this.node) {\n        this.node.sortableInfo.index = nextProps.index;\n      }\n\n      if (this.props.disabled !== nextProps.disabled) {\n        const {collection, disabled, index} = nextProps;\n        if (disabled) {\n          this.removeDraggable(collection);\n        } else {\n          this.setDraggable(collection, index);\n        }\n      } else if (this.props.collection !== nextProps.collection) {\n        this.removeDraggable(this.props.collection);\n        this.setDraggable(nextProps.collection, nextProps.index);\n      }\n    }\n\n    componentWillUnmount() {\n      const {collection, disabled} = this.props;\n\n      if (!disabled) {\n        this.removeDraggable(collection);\n      }\n    }\n\n    setDraggable(collection, index) {\n      const node = findDOMNode(this);\n\n      node.sortableInfo = {\n        index,\n        collection,\n        manager: this.context.manager,\n      };\n\n      this.node = node;\n      this.ref = {node};\n      this.context.manager.add(collection, this.ref);\n    }\n\n    removeDraggable(collection) {\n      this.context.manager.remove(collection, this.ref);\n    }\n\n    getWrappedInstance() {\n      invariant(\n        config.withRef,\n        'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call',\n      );\n      return this.refs.wrappedInstance;\n    }\n\n    render() {\n      const ref = config.withRef ? 'wrappedInstance' : null;\n\n      return (\n        <WrappedComponent\n          ref={ref}\n          {...omit(this.props, 'collection', 'disabled', 'index')}\n        />\n      );\n    }\n  };\n}\n","import * as React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport invariant from 'invariant';\n\nimport {provideDisplayName} from '../utils';\n\nexport default function sortableHandle(\n  WrappedComponent,\n  config = {withRef: false},\n) {\n  return class WithSortableHandle extends React.Component {\n    static displayName = provideDisplayName('sortableHandle', WrappedComponent);\n\n    componentDidMount() {\n      const node = findDOMNode(this);\n      node.sortableHandle = true;\n    }\n\n    getWrappedInstance() {\n      invariant(\n        config.withRef,\n        'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call',\n      );\n      return this.refs.wrappedInstance;\n    }\n\n    render() {\n      const ref = config.withRef ? 'wrappedInstance' : null;\n\n      return <WrappedComponent ref={ref} {...this.props} />;\n    }\n  };\n}\n"],"names":["arrayMove","array","from","to","slice","splice","length","omit","obj","Object","keys","reduce","acc","key","keysToOmit","indexOf","const","events","start","move","end","vendorPrefix","window","document","styles","getComputedStyle","documentElement","pre","Array","prototype","call","join","match","OLink","toUpperCase","substr","closest","el","fn","parentNode","limit","min","max","value","Math","getPixelValue","stringValue","parseFloat","getElementMargin","element","style","top","marginTop","right","marginRight","bottom","marginBottom","left","marginLeft","provideDisplayName","prefix","Component","componentName","displayName","name","getPosition","event","touches","x","pageX","y","pageY","changedTouches","isTouchEvent","getEdgeOffset","node","parent","offset","undefined","nodeOffset","offsetTop","offsetLeft","getLockPixelOffset","width","height","offsetX","lockOffset","offsetY","unit","exec","invariant","isFinite","NodeType","Anchor","Button","Canvas","Input","Option","Textarea","Select","distanceRect","rect","pageXOffset","pageYOffset","dx","dy","sqrt","closestRect","containers","distances","map","container","getBoundingClientRect","getDelta","rect1","rect2","updateDistanceBetweenContainers","distance","container1","container2","delta","cont","scrollDX","scrollContainer","scrollLeft","scrollDY","scrollTop","DragLayer","helper","lists","handleSortMove","preventDefault","updatePosition","updateTargetContainer","this","targetList","handleSortEnd","listenerNode","forEach","eventName","removeEventListener","onDragEnd","removeChild","list","initialWindowScroll","addRef","push","removeRef","i","setTranslateBoundaries","containerBoundingRect","props","useWindowAsScrollContainer","minTranslate","maxTranslate","axis","boundingClientRect","contentWindow","innerWidth","innerHeight","startDrag","position","activeNode","manager","getActive","getHelperDimensions","collection","sortableInfo","index","margin","dimensions","marginOffset","offsetEdge","initialOffset","distanceBetweenContainers","fields","querySelectorAll","clonedNode","cloneNode","clonedFields","field","type","tagName","destCtx","getContext","drawImage","appendChild","boxSizing","pointerEvents","addEventListener","stopDrag","lockAxis","lockToContainerEdges","translate","getLockPixelOffsets","minLockOffset","maxLockOffset","minOffset","maxOffset","originList","active","item","originListInitialWindowScroll","cachedOriginListRect","cachedTargetListRect","getClosestNode","handlePress","targetListRect","targetListContainerHeightDelta","abs","Manager","refs","add","ref","remove","getIndex","isActive","activeRef","find","pop","getOrderedRefs","sort","sortByIndex","index2","index1","sortableContainer","WrappedComponent","config","withRef","checkActiveIndex","nextProps","items","newIndex","isPlainObject","findIndex","id","dragLayer","handleStart","shouldCancelStart","button","_touched","_pos","target","nodeIsChild","sorting","useDragHandle","sortableHandle","toLowerCase","pressDelay","pressTimer","setTimeout","handleMove","pressThreshold","combinedDelta","clearTimeout","cancelTimer","cancel","handleEnd","body","helperClass","hideSortableGhost","onSortStart","initialScroll","sortableGhost","visibility","opacity","classList","split","sortingIndex","_handleSortMove","checkActive","animateNodes","autoscroll","requestAnimationFrame","sortMoveAF","onSortMove","newList","onSortEnd","cancelAnimationFrame","nodes","let","len","edgeOffset","clearInterval","autoscrollInterval","oldIndex","handleSortSwap","onSortSwap","closestNodes","closestCollections","finalNodes","finalIndex","pos","direction","speed","acceleration","isAutoScrolling","setInterval","state","getChildContext","componentDidMount","getContainer","Promise","resolve","then","containerNode","ownerDocument","defaultView","scrollingElement","hasOwnProperty","componentWillUnmount","componentWillReceiveProps","offsets","isArray","transitionDuration","onSortOver","containerScrollDelta","sortingOffset","windowScrollDelta","prevIndex","offsetWidth","offsetHeight","nextNode","prevNode","getWrappedInstance","wrappedInstance","findDOMNode","render","React.createElement","defaultProps","disabledElements","propTypes","PropTypes","oneOf","number","object","string","any","func","bool","oneOfType","arrayOf","childContextTypes","isRequired","sortableElement","disabled","setDraggable","removeDraggable","context","contextTypes"],"mappings":"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"}